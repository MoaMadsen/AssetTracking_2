// <auto-generated />
using AssetTracking_2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetTracking_2.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220601101646_SeedingAssetItemAndCurrency")]
    partial class SeedingAssetItemAndCurrency
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AssetTracking_2.AssetItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EndOfLife")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("PurchaseDate")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyCountry");

                    b.ToTable("assetitems");
                });

            modelBuilder.Entity("AssetTracking_2.Currency", b =>
                {
                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Shorten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Country");

                    b.ToTable("currencies");

                    b.HasData(
                        new
                        {
                            Country = "USA",
                            Rate = 1.0,
                            Shorten = "USD"
                        },
                        new
                        {
                            Country = "Sweden",
                            Rate = 9.9520999999999997,
                            Shorten = "SEK"
                        },
                        new
                        {
                            Country = "Spain",
                            Rate = 0.94869999999999999,
                            Shorten = "EUR"
                        },
                        new
                        {
                            Country = "Denmark",
                            Rate = 7.0784000000000002,
                            Shorten = "DKK"
                        },
                        new
                        {
                            Country = "Germany",
                            Rate = 0.94869999999999999,
                            Shorten = "EUR"
                        });
                });

            modelBuilder.Entity("AssetTracking_2.AssetItem", b =>
                {
                    b.HasOne("AssetTracking_2.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCountry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });
#pragma warning restore 612, 618
        }
    }
}
